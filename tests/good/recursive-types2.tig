/* define valid recursive types */

let
  function printint (i : int) =
   let function f (i : int) =
     if i > 0
     then (f (i/10); print (chr (i-i/10*10+ord ("0"))))
   in (if i < 0 then (print ("-"); f (-i))
         else if i>0 then f (i)
              else print ("0"));
      print("\n")
   end

  /* define a list */
  type intlist = {hd : int, tl : intlist}

  /* define a tree */
  type tree ={key : int, children : treelist}
  type treelist = {hd : tree, tl : treelist}

  var lis : intlist := intlist { tl = intlist { hd = 888, tl = nil}, hd = 4568766 }

in
  printint(lis.tl.hd); exit(0)
end
